(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{355:function(e,v,t){"use strict";t.r(v);var a=t(42),r=Object(a.a)({},(function(){var e=this,v=e.$createElement,t=e._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"redis-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-命令"}},[e._v("#")]),e._v(" Redis 命令")]),e._v(" "),t("p",[e._v("1、set($key, $val) ===> 设定指定key的值，可以已存储其他值，覆盖旧值")]),e._v(" "),t("p",[e._v("2、get($key) ===> 获取指定key的值，不存在，返回null，key存储的值不是字符串，返回错误")]),e._v(" "),t("p",[e._v("3、expire($key, $time)  ===>  设置$key的过期时间")]),e._v(" "),t("p",[e._v("4、del($key)   ===>   删除已存在的健,不存在的key忽略")]),e._v(" "),t("p",[e._v("5、incr($key)  ===>   将key中存储的数字值增一")]),e._v(" "),t("p",[e._v("6、smembers($key) ====> 返回集合中的所有的成员，不存在的集合key视为空集合")]),e._v(" "),t("h2",{attrs:{id:"有序集合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#有序集合"}},[e._v("#")]),e._v(" 有序集合")]),e._v(" "),t("p",[e._v("1、zcard($key) ===>  返回集合中元素的数量，没有返回0")]),e._v(" "),t("p",[e._v("2、zrevrange($key, start, stop, 'withscores') ===>  返回有序集中，start到stop区间内的成员（从大到小排序）\nzrevrangeByScore\n3、zrange($key, start, stop)  ===> 从小到大排序，-1最后一个成员\nzrangeByScore\n4、zadd($key, $num, $val)  ===>  将一个或多个元素及分数值添加到有序集中")]),e._v(" "),t("p",[e._v("5、sadd($key, $val) ===>  将一个或多个元素加到集合中")]),e._v(" "),t("p",[e._v("6、zrem($key, $val)  ===>  移除有序集中的一个或多个成员，不存在的忽略")]),e._v(" "),t("p",[e._v("7、zincrby($key, 1, $val)  ===>  对有序集合中指定成员的分数加上增量 +1")]),e._v(" "),t("p",[e._v("8、zscore($key, $val)  ===>  返回有序集中，成员的分数值，不是有序集key的成员🔥key不存在，返回nil")]),e._v(" "),t("p",[e._v("9、sismember($key, $val)  ===>  判断元素是否是集合的成员")]),e._v(" "),t("p",[e._v("10、zcount(key, min, max)   ====>   计算有序集合中指定分数区间的成员数量(-inf, +inf)")]),e._v(" "),t("h2",{attrs:{id:"哈希"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#哈希"}},[e._v("#")]),e._v(" 哈希")]),e._v(" "),t("p",[e._v("1、hget($key, $field)  ===>  返回哈希表中指定字断的值")]),e._v(" "),t("p",[e._v("2、hset($key, $field, $val) ===>  为哈希表中的字断赋值，已存在的旧值被覆盖")]),e._v(" "),t("p",[e._v("3、hmset($key, [$field => $val, $field1 => $val2])  ===>  同时将多个field-val对设置到哈希表中")]),e._v(" "),t("p",[e._v("4、hgetall($key)  ===>  返回哈希表中所有的字断和值")]),e._v(" "),t("p",[e._v("5、hincrby($key, $field, 1)  ===> 给牧歌key值的一个字断加1")])])}),[],!1,null,null,null);v.default=r.exports}}]);